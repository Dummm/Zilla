@model Zilla.Models.EditAccountViewModel

@{
    ViewBag.Title = "Accounts";
    ViewBag.Message = Model.UserName + "- Edit";
}

<h1 class="pageHeading">
    <i class="fas fa-user-friends" data-fa-transform="shrink-1 up-2 right-2" style="background:#EF9A9A"></i>
    <span>@ViewBag.Title.</span>
</h1>
<h2 class="pageSubheading">
    <span>@ViewBag.Message</span>
    <a class="btn btn-danger text-white float-right" href="@Url.Action("Delete", "Accounts", new { id = Model.UserName })">
        <i class="fas fa-trash-alt"></i> Delete
    </a>
    <a class="btn btn-primary text-white float-right mr-1" href="@Url.Action("Details", "Accounts", new { id = Model.UserName })">
        <i class="fas fa-info"></i> Details
    </a>
    <a class="btn btn-primary text-white float-right mr-1" href="@Url.Action("Index", "Accounts")">
        <i class="fas fa-arrow-left"></i> Back
    </a>
</h2>
<div class="pageContent">
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Description" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Username" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Roles", new { @class = "control-label col-md-2" })
                        <span class=" col-md-10">
                            @foreach (var item in Model.RolesList)
                            {
                                <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                                @Html.Label(item.Value, new { @class = "control-label" })
                            }
                        </span>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10 d-flex justify-content-center">
                            <input type="submit" value="Save changes" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
